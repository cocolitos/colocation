{"ast":null,"code":"var _jsxFileName = \"/media/colin/Documents/Epitech/colocation/src/Profile.js\";\nimport React, { useState } from 'react';\nimport { setUserSession, getToken, getUser, removeUserSession } from './Utils/Common';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from \"components/CustomButtons/Button.js\";\nimport Badge from \"components/Badge/Badge.js\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Close from \"@material-ui/icons/Close\";\nimport styles from \"./assets/jss/material-kit-react/views/componentsSections/basicsStyle.js\"; //import Button from \"components/CustomButtons/Button.js\";\n\nimport Slide from \"@material-ui/core/Slide\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Popup from 'reactjs-popup';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockIcon from '@material-ui/icons/Lock';\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return /*#__PURE__*/React.createElement(Slide, Object.assign({\n    direction: \"down\",\n    ref: ref\n  }, props, {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 10\n    }\n  }));\n});\nTransition.displayName = \"Transition\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    flexGrow: 1\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary\n  },\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    justifyContent: \"center\",\n    display: \"flex\"\n  }\n}));\n\nfunction RoleExist(user, role) {\n  return user.some(function (el) {\n    return el.name === role;\n  });\n}\n\nfunction Profile(props) {\n  const classes = useStyles();\n  const classes_dialog = makeStyles(styles);\n  const [isLoading, setLoading] = useState(true);\n  const [userLogin, setUserLogin] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [isAdmin, setAdmin] = useState(false);\n  const [users, setUsers] = useState([]);\n  const [showCreateUser, setShowCreateUser] = useState(false);\n  const [createUserLogin, setCreateUserLogin] = useState(\"\");\n  const [createUserEmail, setCreateUserEmail] = useState(\"\");\n  const [createUserPassword, setCreateUserPassword] = useState(\"\");\n  const [createUserId, setCreateUserId] = useState();\n  const [createUserRoleUser, setCreateUserRoleUser] = useState(true);\n  const [createUserRoleModerator, setCreateUserRoleModerator] = useState(false);\n  const [createUserRoleAdmin, setCreateUserRoleAdmin] = useState(false);\n  const [createUserUrl, setCreateUserUrl] = useState(\"\");\n  const [createUserActionCreate, setCreateUserActionCreate] = useState(true);\n  const [showUpadteMyPassword, setShowUpdateMyPassword] = useState(false);\n  const [showUpdatePassword, setShowUpdatePassword] = useState(false);\n\n  if (isLoading) {\n    axios.get('https://api-sgetas.herokuapp.com/user/me', {\n      headers: {\n        \"x-access-token\": getToken()\n      }\n    }).then(response => {\n      setUserLogin(response.data.username);\n      setUserEmail(response.data.email);\n      response.data.roles.map(role => {\n        if (role.name == \"admin\") {\n          setAdmin(true);\n          axios.get(\"https://api-sgetas.herokuapp.com/user\", {\n            headers: {\n              \"x-access-token\": getToken()\n            }\n          }).then(response => {\n            setUsers(response.data);\n            console.log(response.data);\n            setLoading(false);\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n\n        console.log(role);\n      });\n\n      if (isAdmin == false) {\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  const handleSubmit_EditMe = event => {\n    event.preventDefault();\n    let data = {\n      username: userLogin,\n      email: userEmail\n    };\n    console.log(data);\n    axios.post('https://api-sgetas.herokuapp.com/user/me', data, {\n      headers: {\n        \"x-access-token\": getToken()\n      }\n    }).then(response => {\n      console.log(response);\n      window.location.reload(false); //props.history.push('/dashboard');\n    }).catch(error => {\n      console.log(error);\n    }); //console.log(React.findDOMNode(this.refs.equipe_nom_ref).value);\n  };\n\n  const handleSubmit_editPasswordMe = event => {\n    event.preventDefault();\n    let data = {\n      password: userPassword\n    };\n    console.log(data);\n    axios.post('https://api-sgetas.herokuapp.com/user/password/me', data, {\n      headers: {\n        \"x-access-token\": getToken()\n      }\n    }).then(response => {\n      console.log(response);\n      window.location.reload(false); //props.history.push('/dashboard');\n    }).catch(error => {\n      console.log(error);\n    }); //console.log(React.findDOMNode(this.refs.equipe_nom_ref).value); \n  };\n\n  const handleSubmit_editPassword = event => {\n    event.preventDefault();\n    let data = {\n      password: userPassword,\n      id: createUserId\n    };\n    console.log(data);\n    axios.post('https://api-sgetas.herokuapp.com/user/new_password', data, {\n      headers: {\n        \"x-access-token\": getToken()\n      }\n    }).then(response => {\n      console.log(response); //window.location.reload(false);\n      //props.history.push('/dashboard');\n    }).catch(error => {\n      console.log(error);\n    }); //console.log(React.findDOMNode(this.refs.equipe_nom_ref).value); \n  };\n\n  const handleSubmit_createUser = event => {\n    event.preventDefault();\n    let roles = [];\n\n    if (createUserRoleUser) {\n      roles.push(\"user\");\n    }\n\n    if (createUserRoleModerator) {\n      roles.push(\"moderator\");\n    }\n\n    if (createUserRoleAdmin) {\n      roles.push(\"admin\");\n    }\n\n    let data = {\n      username: createUserLogin,\n      email: createUserEmail,\n      roles: roles\n    };\n\n    if (createUserActionCreate == true) {\n      data.password = createUserPassword;\n    } else {\n      data.id = createUserId;\n    }\n\n    console.log(data);\n    axios.post(createUserUrl, data, {\n      headers: {\n        \"x-access-token\": getToken()\n      }\n    }).then(response => {\n      console.log(response);\n      window.location.reload(false); //props.history.push('/dashboard');\n    }).catch(error => {\n      console.log(\"erreur\");\n      console.log(error.response.data.message);\n    });\n  };\n\n  const updateUser = user => {\n    if (user !== undefined) {\n      setCreateUserActionCreate(false);\n      setCreateUserUrl(\"https://api-sgetas.herokuapp.com/user/update\");\n      setCreateUserLogin(user.username);\n      setCreateUserEmail(user.email);\n      setCreateUserId(user._id);\n      setCreateUserRoleUser(RoleExist(user.roles, \"user\"));\n      setCreateUserRoleModerator(RoleExist(user.roles, \"moderator\"));\n      setCreateUserRoleAdmin(RoleExist(user.roles, \"admin\"));\n      setShowCreateUser(true);\n    } else {\n      setCreateUserActionCreate(true);\n      setCreateUserUrl(\"https://api-sgetas.herokuapp.com/auth/signup\");\n      setCreateUserLogin(\"\");\n      setCreateUserEmail(\"\");\n      setCreateUserRoleUser(true);\n      setCreateUserRoleModerator(false);\n      setCreateUserRoleAdmin(false);\n      setShowCreateUser(true);\n    }\n  };\n\n  const updatePasswordUser = user => {\n    setCreateUserId(user._id);\n    setUserPassword(\"\");\n    setShowUpdatePassword(true);\n  };\n\n  const deleteUser = id_user => {\n    axios.delete('https://api-sgetas.herokuapp.com/user/delete', {\n      headers: {\n        \"x-access-token\": getToken()\n      },\n      params: {\n        id: id_user\n      }\n    }).then(response => {\n      console.log(response.data);\n      window.location.reload(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  };\n\n  const deconexion = () => {\n    removeUserSession();\n    window.location.reload(false);\n  };\n\n  if (isLoading) {\n    return /*#__PURE__*/React.createElement(\"div\", {\n      className: \"App\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 264,\n        columnNumber: 12\n      }\n    }, \"Loading...\");\n  }\n\n  return /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 269,\n      columnNumber: 5\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    container: true,\n    spacing: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 270,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 9\n    }\n  }), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 6,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 273,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(Paper, {\n    className: classes.paper,\n    style: {\n      justifyContent: \"center\"\n    },\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(Avatar, {\n    className: classes.large,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 275,\n      columnNumber: 13\n    }\n  }, userLogin[0]), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit_EditMe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 276,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 277,\n      columnNumber: 15\n    }\n  }, \"Nom d'utilisateur:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userLogin,\n    onChange: event => setUserLogin(event.target.value),\n    placeholder: \"Nom\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 278,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 285,\n      columnNumber: 15\n    }\n  }, \"Adresse email:\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userEmail,\n    onChange: event => setUserEmail(event.target.value),\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 286,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 293,\n      columnNumber: 17\n    }\n  }, \"Modifier\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowUpdateMyPassword(true),\n    color: \"danger\",\n    simple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 296,\n      columnNumber: 17\n    }\n  }, \"Changer mot de passe\"), /*#__PURE__*/React.createElement(Popup, {\n    trigger: /*#__PURE__*/React.createElement(Button, {\n      color: \"warning\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 303,\n        columnNumber: 33\n      }\n    }, \"Se deconnecter\"),\n    position: \"right center\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 19\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    color: \"warning\",\n    onClick: () => deconexion(),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 304,\n      columnNumber: 24\n    }\n  }, \"Se deconnecter\"))))))), /*#__PURE__*/React.createElement(Grid, {\n    item: true,\n    xs: 3,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 9\n    }\n  })), /*#__PURE__*/React.createElement(Dialog, {\n    classes: {\n      root: classes_dialog.center,\n      paper: classes_dialog.modal\n    },\n    open: showUpadteMyPassword,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => setShowUpdateMyPassword(false),\n    \"aria-labelledby\": \"classic-modal-slide-title\",\n    \"aria-describedby\": \"classic-modal-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 314,\n      columnNumber: 7\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"classic-modal-slide-title\",\n    disableTypography: true,\n    className: classes_dialog.modalHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 11\n    }\n  }, \"Modifier le mot de passe\", /*#__PURE__*/React.createElement(IconButton, {\n    className: classes_dialog.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    color: \"inherit\",\n    onClick: () => setShowUpdateMyPassword(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Close, {\n    className: classes_dialog.modalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 339,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit_editPasswordMe,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 342,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    id: \"classic-modal-slide-description\",\n    className: classes_dialog.modalBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 343,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 347,\n      columnNumber: 15\n    }\n  }, \"Nouveau mot de passe\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userPassword,\n    onChange: event => setUserPassword(event.target.value),\n    placeholder: \"Nouveau mot de passe\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    className: classes_dialog.modalFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 356,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 357,\n      columnNumber: 15\n    }\n  }, \"Valider\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowUpdateMyPassword(false),\n    color: \"danger\",\n    simple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 360,\n      columnNumber: 15\n    }\n  }, \"Fermer\")))), /*#__PURE__*/React.createElement(Dialog, {\n    classes: {\n      root: classes_dialog.center,\n      paper: classes_dialog.modal\n    },\n    open: showUpdatePassword,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => setShowUpdatePassword(false),\n    \"aria-labelledby\": \"classic-modal-slide-title\",\n    \"aria-describedby\": \"classic-modal-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 371,\n      columnNumber: 6\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"classic-modal-slide-title\",\n    disableTypography: true,\n    className: classes_dialog.modalHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 383,\n      columnNumber: 11\n    }\n  }, \"Modifier le mot de passe\", /*#__PURE__*/React.createElement(IconButton, {\n    className: classes_dialog.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    color: \"inherit\",\n    onClick: () => setShowUpdatePassword(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 389,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Close, {\n    className: classes_dialog.modalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 396,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit_editPassword,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 399,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    id: \"classic-modal-slide-description\",\n    className: classes_dialog.modalBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 400,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 404,\n      columnNumber: 15\n    }\n  }, \"Nouveau mot de passe\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: userPassword,\n    onChange: event => setUserPassword(event.target.value),\n    placeholder: \"Nouveau mot de passe\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 405,\n      columnNumber: 15\n    }\n  })), /*#__PURE__*/React.createElement(DialogActions, {\n    className: classes_dialog.modalFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 413,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 414,\n      columnNumber: 15\n    }\n  }, \"Valider\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowUpdatePassword(false),\n    color: \"danger\",\n    simple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 417,\n      columnNumber: 15\n    }\n  }, \"Fermer\")))), /*#__PURE__*/React.createElement(Dialog, {\n    classes: {\n      root: classes_dialog.center,\n      paper: classes_dialog.modal\n    },\n    open: showCreateUser,\n    TransitionComponent: Transition,\n    keepMounted: true,\n    onClose: () => setShowCreateUser(false),\n    \"aria-labelledby\": \"classic-modal-slide-title\",\n    \"aria-describedby\": \"classic-modal-slide-description\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 428,\n      columnNumber: 9\n    }\n  }, /*#__PURE__*/React.createElement(DialogTitle, {\n    id: \"classic-modal-slide-title\",\n    disableTypography: true,\n    className: classes_dialog.modalHeader,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 440,\n      columnNumber: 11\n    }\n  }, \"Ajouter un utilisateur\", /*#__PURE__*/React.createElement(IconButton, {\n    className: classes_dialog.modalCloseButton,\n    key: \"close\",\n    \"aria-label\": \"Close\",\n    color: \"inherit\",\n    onClick: () => setShowCreateUser(false),\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 446,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Close, {\n    className: classes_dialog.modalClose,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 453,\n      columnNumber: 15\n    }\n  }))), /*#__PURE__*/React.createElement(\"form\", {\n    onSubmit: handleSubmit_createUser,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 456,\n      columnNumber: 11\n    }\n  }, /*#__PURE__*/React.createElement(DialogContent, {\n    id: \"classic-modal-slide-description\",\n    className: classes_dialog.modalBody,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 457,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 461,\n      columnNumber: 15\n    }\n  }, \"Nom d'utilisateur\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: createUserLogin,\n    onChange: event => setCreateUserLogin(event.target.value),\n    placeholder: \"Nom d'utilisateur\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 462,\n      columnNumber: 15\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 469,\n      columnNumber: 15\n    }\n  }, \"Email\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: createUserEmail,\n    onChange: event => setCreateUserEmail(event.target.value),\n    placeholder: \"Email\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 470,\n      columnNumber: 15\n    }\n  }), createUserActionCreate == true ? /*#__PURE__*/React.createElement(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 477,\n      columnNumber: 17\n    }\n  }, /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 478,\n      columnNumber: 19\n    }\n  }, \"Mot de passe\"), /*#__PURE__*/React.createElement(\"input\", {\n    type: \"text\",\n    value: createUserPassword,\n    onChange: event => setCreateUserPassword(event.target.value),\n    placeholder: \"Mot de passe\",\n    required: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 479,\n      columnNumber: 19\n    }\n  })) : /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 488,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(\"p\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 490,\n      columnNumber: 15\n    }\n  }, \"Roles\"), /*#__PURE__*/React.createElement(FormGroup, {\n    row: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 491,\n      columnNumber: 15\n    }\n  }, /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: createUserRoleUser,\n      onChange: event => setCreateUserRoleUser(event.target.checked),\n      name: \"RoleUser\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 494,\n        columnNumber: 21\n      }\n    }),\n    label: \"Lire\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 492,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: createUserRoleModerator,\n      onChange: event => setCreateUserRoleModerator(event.target.checked),\n      name: \"RoleModerator\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 504,\n        columnNumber: 21\n      }\n    }),\n    label: \"Ecrire\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 502,\n      columnNumber: 17\n    }\n  }), /*#__PURE__*/React.createElement(FormControlLabel, {\n    control: /*#__PURE__*/React.createElement(Checkbox, {\n      checked: createUserRoleAdmin,\n      onChange: event => setCreateUserRoleAdmin(event.target.checked),\n      name: \"RoleAdmin\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 514,\n        columnNumber: 21\n      }\n    }),\n    label: \"Administrateur\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 512,\n      columnNumber: 17\n    }\n  }))), /*#__PURE__*/React.createElement(DialogActions, {\n    className: classes_dialog.modalFooter,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 524,\n      columnNumber: 13\n    }\n  }, /*#__PURE__*/React.createElement(Button, {\n    type: \"submit\",\n    color: \"primary\",\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 525,\n      columnNumber: 15\n    }\n  }, \"Valider\"), /*#__PURE__*/React.createElement(Button, {\n    onClick: () => setShowCreateUser(false),\n    color: \"danger\",\n    simple: true,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 528,\n      columnNumber: 15\n    }\n  }, \"Fermer\")))));\n}\n/*\n  AFFICHER INFO PERSO\n\n  si admin:\n\n    ajouter utilisateur\n\n    liste utilisateurs\n      popup edit\n      delete\n\n\n\n*/\n\n\nexport default Profile;","map":{"version":3,"sources":["/media/colin/Documents/Epitech/colocation/src/Profile.js"],"names":["React","useState","setUserSession","getToken","getUser","removeUserSession","axios","makeStyles","Grid","Paper","Avatar","Button","Badge","Dialog","DialogTitle","DialogContent","DialogActions","IconButton","Close","styles","Slide","Table","TableBody","TableCell","TableContainer","TableHead","TableRow","FormGroup","FormControlLabel","Checkbox","Popup","DeleteIcon","EditIcon","LockIcon","Transition","forwardRef","props","ref","displayName","useStyles","theme","root","flexGrow","paper","padding","spacing","textAlign","color","palette","text","secondary","large","width","height","justifyContent","display","RoleExist","user","role","some","el","name","Profile","classes","classes_dialog","isLoading","setLoading","userLogin","setUserLogin","userEmail","setUserEmail","userPassword","setUserPassword","isAdmin","setAdmin","users","setUsers","showCreateUser","setShowCreateUser","createUserLogin","setCreateUserLogin","createUserEmail","setCreateUserEmail","createUserPassword","setCreateUserPassword","createUserId","setCreateUserId","createUserRoleUser","setCreateUserRoleUser","createUserRoleModerator","setCreateUserRoleModerator","createUserRoleAdmin","setCreateUserRoleAdmin","createUserUrl","setCreateUserUrl","createUserActionCreate","setCreateUserActionCreate","showUpadteMyPassword","setShowUpdateMyPassword","showUpdatePassword","setShowUpdatePassword","get","headers","then","response","data","username","email","roles","map","console","log","catch","error","handleSubmit_EditMe","event","preventDefault","post","window","location","reload","handleSubmit_editPasswordMe","password","handleSubmit_editPassword","id","handleSubmit_createUser","push","message","updateUser","undefined","_id","updatePasswordUser","deleteUser","id_user","delete","params","deconexion","target","value","center","modal","modalHeader","modalCloseButton","modalClose","modalBody","modalFooter","checked"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\nimport { setUserSession, getToken, getUser, removeUserSession } from './Utils/Common';\nimport axios from 'axios';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Paper from '@material-ui/core/Paper';\nimport Avatar from '@material-ui/core/Avatar';\nimport Button from \"components/CustomButtons/Button.js\";\nimport Badge from \"components/Badge/Badge.js\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport DialogActions from \"@material-ui/core/DialogActions\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport Close from \"@material-ui/icons/Close\";\nimport styles from \"./assets/jss/material-kit-react/views/componentsSections/basicsStyle.js\";\n//import Button from \"components/CustomButtons/Button.js\";\nimport Slide from \"@material-ui/core/Slide\";\nimport Table from '@material-ui/core/Table';\nimport TableBody from '@material-ui/core/TableBody';\nimport TableCell from '@material-ui/core/TableCell';\nimport TableContainer from '@material-ui/core/TableContainer';\nimport TableHead from '@material-ui/core/TableHead';\nimport TableRow from '@material-ui/core/TableRow';\nimport FormGroup from '@material-ui/core/FormGroup';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\nimport Checkbox from '@material-ui/core/Checkbox';\nimport Popup from 'reactjs-popup';\nimport DeleteIcon from '@material-ui/icons/Delete';\nimport EditIcon from '@material-ui/icons/Edit';\nimport LockIcon from '@material-ui/icons/Lock';\n\nconst Transition = React.forwardRef(function Transition(props, ref) {\n  return <Slide direction=\"down\" ref={ref} {...props} />;\n});\n\nTransition.displayName = \"Transition\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    flexGrow: 1,\n  },\n  paper: {\n    padding: theme.spacing(2),\n    textAlign: 'center',\n    color: theme.palette.text.secondary,\n  },\n  large: {\n    width: theme.spacing(10),\n    height: theme.spacing(10),\n    justifyContent: \"center\",\n    display: \"flex\"\n  },\n}));\n\nfunction RoleExist(user, role) {\n  return user.some(function(el) {\n    return el.name === role;\n  }); \n}\n\n\nfunction Profile(props) {\n  const classes = useStyles();\n  const classes_dialog = makeStyles(styles);\n  const [isLoading, setLoading] = useState(true);\n  const [userLogin, setUserLogin] = useState(\"\");\n  const [userEmail, setUserEmail] = useState(\"\");\n  const [userPassword, setUserPassword] = useState(\"\");\n  const [isAdmin, setAdmin] = useState(false);\n  const [users, setUsers] = useState([]);\n\n  const [showCreateUser, setShowCreateUser] = useState(false);\n  const [createUserLogin, setCreateUserLogin] = useState(\"\");\n  const [createUserEmail, setCreateUserEmail] = useState(\"\");\n  const [createUserPassword, setCreateUserPassword] = useState(\"\");\n  const [createUserId, setCreateUserId] = useState();\n  const [createUserRoleUser, setCreateUserRoleUser] = useState(true);\n  const [createUserRoleModerator, setCreateUserRoleModerator] = useState(false);\n  const [createUserRoleAdmin, setCreateUserRoleAdmin] = useState(false);\n  const [createUserUrl, setCreateUserUrl] = useState(\"\");\n  const [createUserActionCreate, setCreateUserActionCreate] = useState(true);\n\n  const [showUpadteMyPassword, setShowUpdateMyPassword] = useState(false);\n\n  const [showUpdatePassword, setShowUpdatePassword] = useState(false);\n\n  if (isLoading) {\n    axios.get('https://api-sgetas.herokuapp.com/user/me', {headers: {\"x-access-token\": getToken()} }).then(response => {\n      setUserLogin(response.data.username);\n      setUserEmail(response.data.email);\n      response.data.roles.map((role) => {\n        if (role.name == \"admin\") {\n          setAdmin(true);\n          axios.get(\"https://api-sgetas.herokuapp.com/user\", {headers: {\"x-access-token\": getToken()} }).then(response => {\n            setUsers(response.data);\n            console.log(response.data);\n            setLoading(false);\n          }).catch(error => {\n            console.log(error);\n          });\n        }\n        console.log(role);\n      });\n      if (isAdmin == false) {\n        setLoading(false);\n      }\n    }).catch(error => {\n      console.log(error);\n    });\n\n  }\n\n  const handleSubmit_EditMe = (event) => {\n\n      event.preventDefault();\n\n      let data = {\n        username: userLogin,\n        email: userEmail\n      }\n      console.log(data);\n      axios.post('https://api-sgetas.herokuapp.com/user/me', data\n      , {\n        headers: {\"x-access-token\": getToken()}\n      }).then(response => {\n        console.log(response);\n        window.location.reload(false);\n        //props.history.push('/dashboard');\n      }).catch(error => {\n        console.log(error);\n      });\n      //console.log(React.findDOMNode(this.refs.equipe_nom_ref).value);\n    }\n\n    const handleSubmit_editPasswordMe = (event) => {\n\n      event.preventDefault();\n\n      let data = {\n        password: userPassword\n      }\n      console.log(data);\n      axios.post('https://api-sgetas.herokuapp.com/user/password/me', data\n      , {\n        headers: {\"x-access-token\": getToken()}\n      }).then(response => {\n        console.log(response);\n        window.location.reload(false);\n        //props.history.push('/dashboard');\n      }).catch(error => {\n        console.log(error);\n      });\n      //console.log(React.findDOMNode(this.refs.equipe_nom_ref).value); \n    }\n\n    const handleSubmit_editPassword = (event) => {\n\n      event.preventDefault();\n\n      let data = {\n        password: userPassword,\n        id: createUserId\n      }\n      console.log(data);\n      axios.post('https://api-sgetas.herokuapp.com/user/new_password', data\n      , {\n        headers: {\"x-access-token\": getToken()}\n      }).then(response => {\n        console.log(response);\n        //window.location.reload(false);\n        //props.history.push('/dashboard');\n      }).catch(error => {\n        console.log(error);\n      });\n      //console.log(React.findDOMNode(this.refs.equipe_nom_ref).value); \n    }\n\n  const handleSubmit_createUser = (event) => {\n    event.preventDefault();\n\n    let roles = [];\n    if (createUserRoleUser) {\n      roles.push(\"user\");\n    }\n    if (createUserRoleModerator) {\n      roles.push(\"moderator\");\n    }\n    if (createUserRoleAdmin) {\n      roles.push(\"admin\");\n    }\n\n    let data = {\n      username: createUserLogin,\n      email: createUserEmail,\n      roles: roles\n    };\n    if (createUserActionCreate == true) {\n      data.password = createUserPassword;\n    } else {\n      data.id = createUserId;\n    }\n    console.log(data);\n    axios.post(createUserUrl, data\n      , {\n        headers: {\"x-access-token\": getToken()}\n      }).then(response => {\n        console.log(response);\n        window.location.reload(false);\n        //props.history.push('/dashboard');\n      }).catch(error => {\n        console.log(\"erreur\");\n        console.log(error.response.data.message);\n      });\n  }\n\n  const updateUser = (user) => {\n    if (user !== undefined) {\n      setCreateUserActionCreate(false);\n      setCreateUserUrl(\"https://api-sgetas.herokuapp.com/user/update\");\n      setCreateUserLogin(user.username);\n      setCreateUserEmail(user.email);\n      setCreateUserId(user._id);\n      setCreateUserRoleUser(RoleExist(user.roles, \"user\"));\n      setCreateUserRoleModerator(RoleExist(user.roles, \"moderator\"));\n      setCreateUserRoleAdmin(RoleExist(user.roles, \"admin\"));\n      setShowCreateUser(true);\n    } else {\n      setCreateUserActionCreate(true);\n      setCreateUserUrl(\"https://api-sgetas.herokuapp.com/auth/signup\");\n      setCreateUserLogin(\"\");\n      setCreateUserEmail(\"\");\n      setCreateUserRoleUser(true);\n      setCreateUserRoleModerator(false);\n      setCreateUserRoleAdmin(false);\n      setShowCreateUser(true);\n    }\n  }\n\n  const updatePasswordUser = (user) => {\n    setCreateUserId(user._id);\n    setUserPassword(\"\");\n    setShowUpdatePassword(true);\n  }\n\n  const deleteUser = (id_user) => {\n    axios.delete('https://api-sgetas.herokuapp.com/user/delete', {\n        headers: {\"x-access-token\": getToken()},\n        params: {id: id_user}\n      }).then(response => {\n      console.log(response.data);\n      window.location.reload(false);\n    }).catch(error => {\n      console.log(error);\n    });\n  }\n\n  const deconexion = () => {\n    removeUserSession();\n    window.location.reload(false);\n  }\n\n  if (isLoading) {\n    return <div className=\"App\">Loading...</div>;\n  }\n\n\n  return (\n    <div>\n      <Grid container spacing={3}>\n        <Grid item xs={3}>\n        </Grid>\n        <Grid item xs={6}>\n          <Paper className={classes.paper} style={{ justifyContent: \"center\"}}>\n            <Avatar className={classes.large}>{userLogin[0]}</Avatar>\n            <form onSubmit={handleSubmit_EditMe}>\n              <p>Nom d'utilisateur:</p>\n              <input \n                type=\"text\" \n                value={userLogin}\n                onChange={event => setUserLogin(event.target.value)}\n                placeholder=\"Nom\"\n                required \n              />\n              <p>Adresse email:</p>\n              <input \n                type=\"text\" \n                value={userEmail}\n                onChange={event => setUserEmail(event.target.value)}\n                placeholder=\"Email\"\n              />\n              <p>\n                <Button type=\"submit\" color=\"primary\">\n                  Modifier\n                </Button>\n                <Button\n                  onClick={() => setShowUpdateMyPassword(true)}\n                  color=\"danger\"\n                  simple\n                >\n                  Changer mot de passe\n                </Button>\n                <Popup trigger={<Button color=\"warning\">Se deconnecter</Button>} position=\"right center\">\n                  <div><Button color=\"warning\" onClick={() => deconexion()}>Se deconnecter</Button></div>\n                </Popup>\n              </p>\n            </form>\n          </Paper>\n        </Grid>\n        <Grid item xs={3}>\n        </Grid>\n      </Grid>\n\n      <Dialog\n          classes={{\n            root: classes_dialog.center,\n            paper: classes_dialog.modal\n          }}\n          open={showUpadteMyPassword}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={() => setShowUpdateMyPassword(false)}\n          aria-labelledby=\"classic-modal-slide-title\"\n          aria-describedby=\"classic-modal-slide-description\"\n        >\n          <DialogTitle\n            id=\"classic-modal-slide-title\"\n            disableTypography\n            className={classes_dialog.modalHeader}\n          >\n            Modifier le mot de passe\n            <IconButton\n              className={classes_dialog.modalCloseButton}\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={() => setShowUpdateMyPassword(false)}\n            >\n              <Close className={classes_dialog.modalClose} />\n            </IconButton>\n          </DialogTitle>\n          <form onSubmit={handleSubmit_editPasswordMe}>\n            <DialogContent\n              id=\"classic-modal-slide-description\"\n              className={classes_dialog.modalBody}\n            >\n              <p>Nouveau mot de passe</p>\n              <input \n                type=\"text\" \n                value={userPassword}\n                onChange={event => setUserPassword(event.target.value)}\n                placeholder=\"Nouveau mot de passe\" \n                required\n              />\n            </DialogContent>\n            <DialogActions className={classes_dialog.modalFooter}>\n              <Button type=\"submit\" color=\"primary\">\n                Valider\n              </Button>\n              <Button\n                onClick={() => setShowUpdateMyPassword(false)}\n                color=\"danger\"\n                simple\n              >\n                Fermer\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n     <Dialog\n          classes={{\n            root: classes_dialog.center,\n            paper: classes_dialog.modal\n          }}\n          open={showUpdatePassword}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={() => setShowUpdatePassword(false)}\n          aria-labelledby=\"classic-modal-slide-title\"\n          aria-describedby=\"classic-modal-slide-description\"\n        >\n          <DialogTitle\n            id=\"classic-modal-slide-title\"\n            disableTypography\n            className={classes_dialog.modalHeader}\n          >\n            Modifier le mot de passe\n            <IconButton\n              className={classes_dialog.modalCloseButton}\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={() => setShowUpdatePassword(false)}\n            >\n              <Close className={classes_dialog.modalClose} />\n            </IconButton>\n          </DialogTitle>\n          <form onSubmit={handleSubmit_editPassword}>\n            <DialogContent\n              id=\"classic-modal-slide-description\"\n              className={classes_dialog.modalBody}\n            >\n              <p>Nouveau mot de passe</p>\n              <input \n                type=\"text\" \n                value={userPassword}\n                onChange={event => setUserPassword(event.target.value)}\n                placeholder=\"Nouveau mot de passe\" \n                required\n              />\n            </DialogContent>\n            <DialogActions className={classes_dialog.modalFooter}>\n              <Button type=\"submit\" color=\"primary\">\n                Valider\n              </Button>\n              <Button\n                onClick={() => setShowUpdatePassword(false)}\n                color=\"danger\"\n                simple\n              >\n                Fermer\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n        <Dialog\n          classes={{\n            root: classes_dialog.center,\n            paper: classes_dialog.modal\n          }}\n          open={showCreateUser}\n          TransitionComponent={Transition}\n          keepMounted\n          onClose={() => setShowCreateUser(false)}\n          aria-labelledby=\"classic-modal-slide-title\"\n          aria-describedby=\"classic-modal-slide-description\"\n        >\n          <DialogTitle\n            id=\"classic-modal-slide-title\"\n            disableTypography\n            className={classes_dialog.modalHeader}\n          >\n            Ajouter un utilisateur\n            <IconButton\n              className={classes_dialog.modalCloseButton}\n              key=\"close\"\n              aria-label=\"Close\"\n              color=\"inherit\"\n              onClick={() => setShowCreateUser(false)}\n            >\n              <Close className={classes_dialog.modalClose} />\n            </IconButton>\n          </DialogTitle>\n          <form onSubmit={handleSubmit_createUser}>\n            <DialogContent\n              id=\"classic-modal-slide-description\"\n              className={classes_dialog.modalBody}\n            >\n              <p>Nom d'utilisateur</p>\n              <input \n                type=\"text\"\n                value={createUserLogin}\n                onChange={event => setCreateUserLogin(event.target.value)}\n                placeholder=\"Nom d'utilisateur\"\n                required\n              />\n              <p>Email</p>\n              <input \n                type=\"text\"\n                value={createUserEmail}\n                onChange={event => setCreateUserEmail(event.target.value)}\n                placeholder=\"Email\"\n              />\n              { createUserActionCreate == true ? (\n                <div>\n                  <p>Mot de passe</p>\n                  <input \n                    type=\"text\"\n                    value={createUserPassword}\n                    onChange={event => setCreateUserPassword(event.target.value)}\n                    placeholder=\"Mot de passe\"\n                    required\n                  />\n                </div>\n              ) : (\n                <p></p>\n              )}\n              <p>Roles</p>\n              <FormGroup row>\n                <FormControlLabel\n                  control={\n                    <Checkbox\n                      checked={createUserRoleUser}\n                      onChange={event => setCreateUserRoleUser(event.target.checked)}\n                      name=\"RoleUser\"\n                    />\n                  }\n                  label=\"Lire\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox \n                      checked={createUserRoleModerator}\n                      onChange={event => setCreateUserRoleModerator(event.target.checked)}\n                      name=\"RoleModerator\"\n                    />\n                  }\n                  label=\"Ecrire\"\n                />\n                <FormControlLabel\n                  control={\n                    <Checkbox \n                      checked={createUserRoleAdmin}\n                      onChange={event => setCreateUserRoleAdmin(event.target.checked)}\n                      name=\"RoleAdmin\"\n                    />\n                  }\n                  label=\"Administrateur\"\n                />\n              </FormGroup>\n            </DialogContent>\n            <DialogActions className={classes_dialog.modalFooter}>\n              <Button type=\"submit\" color=\"primary\">\n                Valider\n              </Button>\n              <Button\n                onClick={() => setShowCreateUser(false)}\n                color=\"danger\"\n                simple\n              >\n                Fermer\n              </Button>\n            </DialogActions>\n          </form>\n        </Dialog>\n\n\n    </div>\n  );\n}\n \n/*\n  AFFICHER INFO PERSO\n\n  si admin:\n\n    ajouter utilisateur\n\n    liste utilisateurs\n      popup edit\n      delete\n\n\n\n*/\n\nexport default Profile;"]},"metadata":{},"sourceType":"module"}